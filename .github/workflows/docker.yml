deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build React app
      run: npm run build
    
    - name: Generate deployment package
      run: zip -r deploy.zip * -x "node_modules/*"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Create Launch Template
      run: |
        aws ec2 create-launch-template \
          --launch-template-name "eb-launch-template" \
          --version-description "Launch template for EB" \
          --launch-template-data '{
            "InstanceType": "t2.micro",
            "ImageId": "ami-0c55b159cbfafe1f0",
            "SecurityGroupIds": ["${{ secrets.SECURITY_GROUP_ID }}"],
            "IamInstanceProfile": {
              "Name": "aws-elasticbeanstalk-ec2-role"
            }
          }'
    
    - name: Update Elastic Beanstalk environment
      run: |
        aws elasticbeanstalk update-environment \
          --environment-name "Docker-react-env" \
          --option-settings "[
            {
              \"Namespace\": \"aws:autoscaling:launchconfiguration\",
              \"OptionName\": \"LaunchTemplateId\",
              \"Value\": \"${LAUNCH_TEMPLATE_ID}\"
            }
          ]"
      env:
        LAUNCH_TEMPLATE_ID: $(aws ec2 describe-launch-templates --launch-template-name "eb-launch-template" --query 'LaunchTemplates[0].LaunchTemplateId' --output text)
    
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: your-application-name
        environment_name: Docker-react-env
        region: ${{ secrets.AWS_REGION }}
        deployment_package: deploy.zip
        wait_for_deployment: true